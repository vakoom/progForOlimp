#include <iostream>
#include <vector>
#include <set>
#include <queue>

using namespace std;

vector<vector<int> > a;
vector<int> p;
vector<int> d;

void bfs(int s){
    for (int v = 0; v < d.size(); ++v){
        d[v] = 1000;
    }
    d[s] = 0;
    queue<int> q;
    q.push(s);
    while (!q.empty()){
        int v = q.front();
        q.pop();
        for (int u: a[v]){
            if (d[u] == 1000){
                d[u] = d[v] + 1;
                q.push(u);
                p[u] = v;
            }
        }
    }
}


int main()
{
    int n, inp;
    cin >> n;
    a.resize(n);
    p.resize(n);
    d.resize(n);
    for (int i = 0; i < n; ++i){
        for (int j = 0; j < n; ++j){
            cin >> inp;
            if (inp == 1){
                a[i].push_back(j);
            }
        }
    }
    int a, b;
    cin >> a >> b;
    a -= 1;
    b -= 1;
    bfs(a);
    if (d[b] == 1000){
        cout << -1;
        return 0;
    }
    cout << d[b] << endl;
    if (d[b] != 0){
        vector<int> ans;
        int k = b;
        for (int i = 0; i <= d[b]; ++i){
            ans.push_back(k + 1);
            k = p[k];
        }
        cout << a + 1 << " ";
        for (int i = d[b] - 1; i >= 0; --i){
            cout << ans[i] << " ";
        }
    }
}
